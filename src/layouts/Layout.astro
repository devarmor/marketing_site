---
import { SEO } from "astro-seo";
import Footer from "@components/footer.astro";
import Navbar from "@components/navbar/navbar.astro";
import "@fontsource-variable/inter/index.css";

export interface Props {
  title: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString();

const resolvedImageWithDomain = new URL(
  "/opengraph.jpg",
  Astro.site
).toString();

const { title } = Astro.props;

const makeTitle = title
  ? "DevArmor" + " | " + title
  : "Do Threat Modeling in Minutes, Not Months. Simplify Security Decisions.";
---

<!doctype html>
<html lang="en" class="light" style="display: none;">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title><slot name="title">DevArmor</slot></title>
    <script>
      // Set theme before rendering
      const theme =
        localStorage.getItem("theme") ||
        (window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light");
      document.documentElement.classList.add(theme);
      document.documentElement.style.display = "block";
    </script>

    <SEO
      title={makeTitle}
      description="DevArmor is the first platform for security reviews, threat modeling, and requirements enforcement."
      canonical={canonicalURL}
      twitter={{
        creator: "@kavousian",
        site: "@web3templates",
        card: "summary_large_image",
      }}
      openGraph={{
        basic: {
          url: canonicalURL,
          type: "website",
          title: `DevArmor - Automated security reviews, threat modeling, and requirements enforcement.`,
          image: resolvedImageWithDomain,
        },
        image: {
          alt: "DevArmor Completes Threat Modeling in Minutes, Not Months.",
        },
      }}
    />

    <script>
      (function () {
        var i = "analytics",
          analytics = (window[i] = window[i] || []);
        if (!analytics.initialize)
          if (analytics.invoked)
            window.console &&
              console.error &&
              console.error("Segment snippet included twice.");
          else {
            analytics.invoked = !0;
            analytics.methods = [
              "trackSubmit",
              "trackClick",
              "trackLink",
              "trackForm",
              "pageview",
              "identify",
              "reset",
              "group",
              "track",
              "ready",
              "alias",
              "debug",
              "page",
              "screen",
              "once",
              "off",
              "on",
              "addSourceMiddleware",
              "addIntegrationMiddleware",
              "setAnonymousId",
              "addDestinationMiddleware",
              "register",
            ];
            analytics.factory = function (e) {
              return function () {
                if (window[i].initialized)
                  return window[i][e].apply(window[i], arguments);
                var n = Array.prototype.slice.call(arguments);
                if (
                  [
                    "track",
                    "screen",
                    "alias",
                    "group",
                    "page",
                    "identify",
                  ].indexOf(e) > -1
                ) {
                  var c = document.querySelector("link[rel='canonical']");
                  n.push({
                    __t: "bpc",
                    c: (c && c.getAttribute("href")) || void 0,
                    p: location.pathname,
                    u: location.href,
                    s: location.search,
                    t: document.title,
                    r: document.referrer,
                  });
                }
                n.unshift(e);
                analytics.push(n);
                return analytics;
              };
            };
            for (var n = 0; n < analytics.methods.length; n++) {
              var key = analytics.methods[n];
              analytics[key] = analytics.factory(key);
            }
            analytics.load = function (key, n) {
              var t = document.createElement("script");
              t.type = "text/javascript";
              t.async = !0;
              t.setAttribute("data-global-segment-analytics-key", i);
              t.src =
                "https://cdn.segment.com/analytics.js/v1/" +
                key +
                "/analytics.min.js";
              var r = document.getElementsByTagName("script")[0];
              if (r) {
                if (r.parentNode) {
                  r.parentNode.insertBefore(t, r);
                }
              }
              analytics._loadOptions = n;
            };
            analytics._writeKey = "IOgTBFSriVyQMbXySpxhxPgoq4FHziMn";
            analytics.SNIPPET_VERSION = "5.2.0";
            analytics.load("IOgTBFSriVyQMbXySpxhxPgoq4FHziMn");
            analytics.page();
          }
      })();
    </script>
  </head>
  <body
    class="bg-white dark:bg-[#050833] text-gray-900 dark:text-gray-100 transition-colors duration-200">
    <Navbar />
    <slot />
    <Footer />
    <script>
      // Handle theme toggle
      document.addEventListener("DOMContentLoaded", () => {
        const toggle = document.getElementById("theme-toggle");
        if (toggle) {
          toggle.addEventListener("click", () => {
            const isDark = document.documentElement.classList.toggle("dark");
            document.documentElement.style.colorScheme = isDark
              ? "dark"
              : "light";
            localStorage.setItem("theme", isDark ? "dark" : "light");
          });
        }
      });
    </script>
    <style is:global>
      /* Improve Page speed */
      /* https://css-tricks.com/almanac/properties/c/content-visibility/ */
      img {
        content-visibility: auto;
      }
    </style>
  </body>
</html>
