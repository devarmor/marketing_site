---
import Container from "@components/container.astro";
import Link from "@components/ui/link.astro";
import Dropdown from "./dropdown.astro";
import { Astronav, MenuItems, MenuIcon } from "astro-navbar";
import { Icon } from "astro-icon/components";

interface MenuItem {
  title: string;
  path: string;
  children?: MenuItem[];
  badge?: boolean;
}

const menuitems: MenuItem[] = [
  // {
  //   title: "Features",
  //   path: "#",
  //   children: [
  //     { title: "Action", path: "/" },
  //     { title: "Another action", path: "#" },
  //     { title: "Dropdown Submenu", path: "#" },
  //     { title: "404 Page", path: "/404" },
  //   ],
  // },
  // {
  //   title: "Pricing",
  //   path: "/pricing",
  // },
  // {
  //   title: "About",
  //   path: "/about",
  // },
  // {
  //   title: "Blog",
  //   path: "/blog",
  // },
  // {
  //   title: "Join Waitlist",
  //   path: "/contact",
  // },
  // {
  //   title: "Pro Version",
  //   badge: true,
  //   path: "https://astroship-pro.web3templates.com/",
  // },
];
---

<header
  class="sticky top-0 z-50 bg-white dark:bg-[#050833] dark:shadow-sm transition-colors duration-200 ease-in-out">
  <Container>
    <div class="flex flex-col lg:flex-row justify-between items-center py-4">
      <Astronav>
        <div class="flex w-full lg:w-auto items-center justify-between">
          <div class="flex items-center gap-4">
            <a href="/" class="text-lg w-[140px] flex-shrink-0">
              <img
                id="logo"
                src="/DevArmor_FullLogo_LightMode.svg"
                alt="DevArmor"
                class="h-12 w-full object-contain"
              />
            </a>
            <button
              id="theme-toggle"
              class="relative inline-flex h-5 w-10 items-center rounded-full bg-gray-200 dark:bg-gray-700 transition-colors duration-200 border border-gray-400 dark:border-gray-500 p-0.5"
              aria-label="Toggle dark mode">
              <span class="sr-only">Toggle dark mode</span>
              <div
                class="absolute left-0.5 top-1/2 -translate-y-1/2 transition-transform duration-200 dark:translate-x-5">
                <svg
                  class="h-3 w-3 text-gray-500 dark:text-gray-400"
                  viewBox="0 0 20 20"
                  fill="currentColor">
                  <path
                    fill-rule="evenodd"
                    d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
                    clip-rule="evenodd"></path>
                </svg>
              </div>
              <div
                class="absolute right-0.5 top-1/2 -translate-y-1/2 transition-transform duration-200 dark:-translate-x-5">
                <svg
                  class="h-3 w-3 text-gray-500 dark:text-gray-400"
                  viewBox="0 0 20 20"
                  fill="currentColor">
                  <path
                    d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
                  ></path>
                </svg>
              </div>
            </button>
          </div>
          <div class="block lg:hidden">
            <MenuIcon class="w-4 h-4 text-gray-800 dark:text-white" />
          </div>
        </div>
        <MenuItems class="hidden w-full lg:w-auto mt-2 lg:flex lg:mt-0">
          <ul class="flex flex-col lg:flex-row lg:gap-3">
            {
              menuitems.map((item, index) => (
                <>
                  {item.children && (
                    <Dropdown
                      title={item.title}
                      children={item.children}
                      lastItem={index === menuitems.length - 1}
                    />
                  )}

                  {!item.children && (
                    <li>
                      <a
                        href={item.path}
                        class="flex lg:px-3 py-2 items-center text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white">
                        <span> {item.title}</span>
                        {item.badge && (
                          <span class="ml-1 px-2 py-0.5 text-[10px] animate-pulse font-semibold uppercase text-white bg-indigo-600 rounded-full">
                            New
                          </span>
                        )}
                      </a>
                    </li>
                  )}
                </>
              ))
            }
          </ul>
        </MenuItems>
      </Astronav>
      <div class="flex items-center gap-4">
        <div class="hidden lg:flex items-center gap-8">
          <a
            href="/about"
            class="text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white"
            >About</a
          >
          <a
            href="/blog"
            class="text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white"
            >Blog</a
          >
          <a
            href="https://calendly.com/amir-devarmor/30min"
            class="px-4 py-2 text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white border border-gray-300 dark:border-gray-600 rounded-md hover:border-gray-400 dark:hover:border-gray-500 transition-colors duration-200"
            >Book a Demo</a
          >
          <Link
            href="/contact"
            size="md"
            class="!bg-[#f44b88] hover:!bg-[#e03a77] text-white"
            >Get Early Access</Link
          >
        </div>
      </div>
    </div>
  </Container>
</header>

<script>
  // Update logo based on theme
  function updateLogo() {
    const logo = document.getElementById("logo") as HTMLImageElement | null;
    if (logo) {
      if (document.documentElement.classList.contains("dark")) {
        logo.src = "/DevArmor_FullLogo_DarkMode.svg";
      } else {
        logo.src = "/DevArmor_FullLogo_LightMode.svg";
      }
    }
  }

  // Initial logo setup
  updateLogo();

  // Listen for theme changes
  const themeToggle = document.getElementById("theme-toggle");
  if (themeToggle) {
    themeToggle.addEventListener("click", () => {
      // Wait for the theme class to be updated
      setTimeout(updateLogo, 0);
    });
  }
</script>
